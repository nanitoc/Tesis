from copyreg import pickle
import pickle
#import numpy as np
#import matplotlib.pyplot as plt
#import os
#import cv2
import tensorflow as tf
from keras.models import Sequential
from keras.layers import Dense, Dropout, Activation, Flatten, Conv2D, MaxPooling2D

from keras.callbacks_v1 import TensorBoard
import time

Name= "Alert-No-alert-64x2-{}".format(int(time.time()))
tensorboard = TensorBoard(log_dir='.logs/{}'.format(Name))

#os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'

x = pickle.load(open("x.pickle","rb"))
y = pickle.load(open("y.pickle","rb"))

#Normalizando

x = x/255.0

# Primera capa convolucional
model = Sequential()
model.add(Conv2D(64,(3,3), input_shape = x.shape[1:]))
model.add(Activation("relu"))
model.add(MaxPooling2D(pool_size=(2,2)))
# segunda capa convolucional
model.add(Conv2D(64,(3,3)))
model.add(Activation("relu"))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())   
model.add(Dense(64))
model.add(Activation("relu"))

model.add(Dense(1))
model.add(Activation('sigmoid'))

model.compile(loss="binary_crossentropy",
              optimizer="adam",
              metrics= ['accuracy']
                    )

model.fit(x, y, batch_size=32, epochs=10, callbacks=[tensorboard], validation_split=0.1)
#model.fit(x, y, batch_size=32, epochs=3,validation_split=0.1)

model.save('Alert-noAlert-64x3-CNN.model')
